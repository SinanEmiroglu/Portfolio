@page "/job/edit/{Id:int}"
@using NailDown.Shared.Model;
@inject HttpClient _client
@inject NavigationManager _navigation
@inject IJSRuntime _jsRuntime

<h3>Edit Job</h3>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Title">Title *</label>
            <input form="Title" class="form-control" @bind="job.Title" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Description">Description *</label>
            <input form="Description" class="form-control" @bind="job.Description" />
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="form-group">
        <input type="button" class="btn btn-primary" @onclick="@Save" value="Save" />
        <input type="button" class="btn btn-secondary" @onclick="@Cancel" value="Cancel" />
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private JobModel? job = new JobModel();

    protected override async Task OnInitializedAsync()
    {
        job = await _client.GetFromJsonAsync<JobModel>($"api/job/{Id}");
    }

    private async Task Save()
    {
        if (job != null)
        {
            job.LastEditDate = DateTime.Now;
        }

        var response = await _client.PutAsJsonAsync($"api/job/edit/{Id}", job);
        bool success = await response.Content.ReadFromJsonAsync<bool>();

        _navigation.NavigateTo("/");
    }

    private void Cancel()
    {
        _navigation.NavigateTo("/");
    }
}
